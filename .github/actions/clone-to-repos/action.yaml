name: clone-to-repos
description: Clone one image with multiple arcs to multiple image repos

inputs:
  image_platform_tags:
    description: TODO
    required: true
  image_tag:
    description: TODO
    required: true
  registry:
    description: TODO
    required: true
  username:
    description: TODO
    required: true
  password:
    description: TODO
    required: true
  repository:
    description: TODO
    required: true
  main_registry:
    description: TODO
    required: true
  main_username:
    description: TODO
    required: true
  main_password:
    description: TODO
    required: true

runs:
  using: "composite"
  steps:
    - name: Log in to Registry to pull images
      uses: redhat-actions/podman-login@632d91dfe19e1b55833cb708786bfbad2c2a0335 #pin@v3.2.0
      with:
        registry: ${{ inputs.main_registry }}
        username: ${{ inputs.main_username }}
        password: ${{ inputs.main_password }}

    - name: Import Docker images
      shell: bash
      run: |
        for PLATFORM in ${{ inputs.image_platform_tags }}; do \
          PLATFORM_SLASH=$(echo $PLATFORM | sed -e 's/-/\//g')
          for TAG in latest ${{ inputs.image_tag }}; do \
            docker pull --platform $PLATFORM_SLASH ${{ env.MAIN_REGISTRY }}/${{ env.MAIN_REPOSITORY }}:$TAG-$PLATFORM
          done
        done

    - name: Log out of registry
      shell: bash
      run: |
        podman logout ${{ env.MAIN_REGISTRY }}

    - name: Log in to Registry to push images
      uses: redhat-actions/podman-login@632d91dfe19e1b55833cb708786bfbad2c2a0335 #pin@v3.2.0
      with:
        registry: ${{ inputs.registry }}
        username: ${{ inputs.username }}
        password: ${{ inputs.password }}

    - name: Push images
      shell: bash
      run: |
        IMAGE_REPOSITORY="${{ inputs.registry }}/${{ inputs.repository }}"

        for PLATFORM in ${{ inputs.image_platform_tags }}; do \
          for TAG in latest ${{ inputs.image_tag }}; do \
            docker tag ${{ env.MAIN_REGISTRY }}/${{ env.MAIN_REPOSITORY }}:$TAG-$PLATFORM $IMAGE_REPOSITORY:$TAG-$PLATFORM
            docker push $IMAGE_REPOSITORY:$TAG-$PLATFORM
          done
        done

    - name: Create and push manifests
      shell: bash
      run: |
        IMAGE_REPOSITORY="${{ inputs.registry }}/${{ inputs.repository }}"
        TAGS="latest"
        if [[ "${{ inputs.image_tag }}" != "latest" ]]; then
          TAGS="$TAGS ${{ inputs.image_tag }}"
        fi

        for TAG in $TAGS; do \
          podman manifest create $IMAGE_REPOSITORY:$TAG
          for PLATFORM in ${{ inputs.image_platform_tags }}; do \
              podman manifest add $IMAGE_REPOSITORY:$TAG docker://$IMAGE_REPOSITORY:$TAG-$PLATFORM; \
          done
          podman manifest push $IMAGE_REPOSITORY:$TAG docker://$IMAGE_REPOSITORY:$TAG
        done
