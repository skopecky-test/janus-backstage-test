name: Build
on:
  push:
    branches:
      - main
      - test
    tags:
      - v*

env:
  MAIN_REGISTRY: ghcr.io
  MAIN_USERNAME: ${{ github.actor }}
  MAIN_PASSWORD: ${{ github.token }}
  MAIN_REPOSITORY: ${{ github.repository }}

jobs:
  setup:
    uses: ./.github/workflows/setup.yaml
    with:
      default_tag_version: "latest"
      build_platforms: "linux/amd64,linux/arm64"

  build-images:
    runs-on: ubuntu-latest
    needs: ["setup"]
    strategy:
      matrix:
        platform: ${{ fromJson(needs.setup.outputs.dist_matrix) }}

    steps:
      - name: Setup Job Variables
        id: set-build-variables
        run: |
          echo "PLATFORM_DASH=$(echo ${{ matrix.platform }} | sed -e 's/\//-/g')" >> $GITHUB_OUTPUT

      - name: checkout repo
        uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # pin@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@e81a89b1732b9c48d79cd809d8d81d79c4647a18 #pin@v2.1.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@8c0edbc76e98fa90f69d9a2c020dcb50019dc325 #pin@v2.2.1

      - uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516 #pin@v3.5.1
        with:
          node-version: 18

      - name: Create Backstage application
        run: |
          mkdir backstage
          cp ./Dockerfile ./.dockerignore ./backstage/

      - name: Log in to Registry
        uses: redhat-actions/podman-login@632d91dfe19e1b55833cb708786bfbad2c2a0335 #pin@v3.2.0
        with:
          registry: ${{ env.MAIN_REGISTRY }}
          username: ${{ env.MAIN_USERNAME }}
          password: ${{ env.MAIN_PASSWORD }}

      - name: Build container image
        uses: docker/build-push-action@37abcedcc1da61a57767b7588cb9d03eb57e28b3 #pin@v3.3.0
        with:
          context: backstage
          file: Dockerfile
          platforms: ${{ matrix.platform }}
          provenance: false
          push: true
          tags: |
            ${{ env.MAIN_REGISTRY }}/${{ env.MAIN_REPOSITORY }}:latest-${{ steps.set-build-variables.outputs.PLATFORM_DASH }}
            ${{ env.MAIN_REGISTRY }}/${{ env.MAIN_REPOSITORY }}:${{ needs.setup.outputs.image_tag }}-${{ steps.set-build-variables.outputs.PLATFORM_DASH }}

  push-images-and-manifests:
    runs-on: ubuntu-latest
    needs: ["setup", "build-images"]
    strategy:
      matrix:
        include:
          - registry: ghcr.io
            username: ${{ github.actor }}
            password: GITHUB_TOKEN
            repository: ${{ github.repository }}
          # Define more image repositories like this:
          - registry: quay.io
            username: ${{ vars.QUAY_USERNAME }}
            password: QUAY_TOKEN
            repository: skopecky/janus-backstage-test

    steps:
      - name: Do stuff
        uses: ./.github/actions/clone-to-repos
        with:
          image_platform_tags: ${{ needs.setup.outputs.image_platform_tags }}
          image_tag: ${{ needs.setup.outputs.image_tag }}
          registry: ${{ matrix.registry }}
          username: ${{ matrix.username }}
          password_key: ${{ matrix.password }}
          repository: ${{ matrix.repository }}
          main_registry: ${{ env.MAIN_REGISTRY }}
          main_username: ${{ env.MAIN_USERNAME }}
          main_password: ${{ env.MAIN_PASSWORD }}
